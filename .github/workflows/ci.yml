name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  notify:
    runs-on: ubuntu:latest
    steps:
    - uses: actions/checkout@v2
    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
    - name: Discord notification PR
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: >
          <:kolibri:790471932025372693> [[{{ SHORT_SHA }}](https://github.com/{{ GITHUB_REPOSITORY }}/commit/{{ SHORT_SHA }})] [Starting Kolibri build...](https://github.com/{{ GITHUB_REPOSITORY }}/actions/runs/{{ GITHUB_RUN_ID }}?check_suite_focus=true)
          ```${{ github.event.head_commit.message }}```

  build_and_test_smart_contracts:
    runs-on: cimg/python:3.9.1-node
    steps:
    - uses: actions/checkout@v2
    - run:
      name: "Install SmartPy"
      command: |
        sh <(curl -s https://smartpy.io/releases/20201222-65067da80037a151c726ae887cc2a24d02eca2b0/cli/install.sh) local-install ~/smartpy-cli
    - run:
      name: "Build and Test Smart Contracts"
      command: |
        cd smart_contracts
        ./compile.sh
    
  notify_end:
    runs-on: ubuntu:latest
    needs: [build_and_test_smart_contracts]
    steps:
    - uses: actions/checkout@v2
    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
    - name: Discord notification PR
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: >
          <:kolibri:790471932025372693> [[{{ SHORT_SHA }}](https://github.com/{{ GITHUB_REPOSITORY }}/commit/{{ SHORT_SHA }})] [Kolibri built successfully!](https://github.com/{{ GITHUB_REPOSITORY }}/actions/runs/{{ GITHUB_RUN_ID }}?check_suite_focus=true)
          ```${{ github.event.head_commit.message }}```
